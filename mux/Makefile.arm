
CROSS_COMPILE=arm-linux-
STRIP	= $(CROSS_COMPILE)strip
CC	= $(CROSS_COMPILE)gcc
LD      = $(CROSS_COMPILE)ld
TARGET=arm-linux


#cross compile
CFLAGS +="-I/opt/eldk-4.0/arm/usr/include/"
LDFLAGS += "-Wl,-rpath,/opt/eldk-4.0/arm/lib/"


#host compile
IFLAGS = -I../include 
#CFLAGS +=-g -O2 -fno-stack-protector
#CFLAGS +=-g -O2 -Wl,-rpath,/home/nixinlong/work/digit-nms/src/hfc/mux/stanlibs/jsonlibs 
#LDFLAGS += -L./  -lm
CFLAGS +=-g -O2 -fPIC
LDFLAGS += -L./ -lm

BUILD_PATH = build
BIN_PATH = $(BUILD_PATH)/bin
LIB_PATH = $(BUILD_PATH)/lib


OBJ=  tcpclient.o list.o communicate.o getAllChannelSignal.o getOutRate.o \
getMultiMethod.o getMultiProgNum.o getMultiProgNum2.o  getPidMapSumCnt.o \
curCHNSearched.o getOutPidMapNum.o getPrgCnt.o getPrgramInfo.o getPrograms.o \
freePrograms.o  sendPrograms.o clsMuxOutCh.o cJSON.o getPrgJson.o devinfo.o \
clsMuxprgInfoGet.o clsMuxSend.o clsProgram.o  clsParams.o getBaseJson.o getOutPrograms.o clsMakeTable.o clsPsiTable.o \
getTableJson.o clsMux.o

LIB_OBJ=  communicate.o list.o getAllChannelSignal.o getOutRate.o \
getMultiMethod.o getMultiProgNum.o getMultiProgNum2.o  getPidMapSumCnt.o \
curCHNSearched.o getOutPidMapNum.o getPrgCnt.o getPrgramInfo.o getPrograms.o \
freePrograms.o sendPrograms.o  clsMuxOutCh.o cJSON.o getPrgJson.o devinfo.o \
clsMuxprgInfoGet.o clsMuxSend.o clsProgram.o clsParams.o getBaseJson.o getOutPrograms.o clsMakeTable.o clsPsiTable.o \
getTableJson.o clsMux.o

.PHONY: all clean distclean

all:build install

build:
	$(CC) $(CFLAGS) $(IFLAGS) -c tcpclient.c
	$(CC) $(CFLAGS) $(IFLAGS) -c communicate.c
	$(CC) $(CFLAGS) $(IFLAGS) -c list.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getAllChannelSignal.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getOutRate.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getMultiMethod.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getMultiProgNum.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getMultiProgNum2.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getPidMapSumCnt.c
	$(CC) $(CFLAGS) $(IFLAGS) -c curCHNSearched.c
	
	$(CC) $(CFLAGS) $(IFLAGS) -c getOutPidMapNum.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getPrgCnt.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getPrgramInfo.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getPrograms.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getOutPrograms.c
	$(CC) $(CFLAGS) $(IFLAGS) -c freePrograms.c
	$(CC) $(CFLAGS) $(IFLAGS) -c sendPrograms.c
	$(CC) $(CFLAGS) $(IFLAGS) -c clsMuxOutCh.c
	$(CC) $(CFLAGS) $(IFLAGS) -c cJSON.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getPrgJson.c
	$(CC) $(CFLAGS) $(IFLAGS) -c devinfo.c
	$(CC) $(CFLAGS) $(IFLAGS) -c clsMuxSend.c	
	$(CC) $(CFLAGS) $(IFLAGS) -c clsMuxprgInfoGet.c
	$(CC) $(CFLAGS) $(IFLAGS) -c clsProgram.c
	$(CC) $(CFLAGS) $(IFLAGS) -c clsMakeTable.c		
	$(CC) $(CFLAGS) $(IFLAGS) -c clsPsiTable.c	
	$(CC) $(CFLAGS) $(IFLAGS) -c clsParams.c
	$(CC) $(CFLAGS) $(IFLAGS) -c clsMux.c	
	$(CC) $(CFLAGS) $(IFLAGS) -c getBaseJson.c
	$(CC) $(CFLAGS) $(IFLAGS) -c getTableJson.c
	
	
	
	$(CC) $(OBJ) -g -O0   -o tcpclient  $(DBS_LIB) $(BOARDAPI_LD_FLAGS) $(LDFLAGS)

	$(CC) $(LIB_OBJ) -g -O2  -shared -Wall -fPIC -o libtcpclient.so $(LDFLAGS)

	#$(STRIP) tcpclient 

install:
	mkdir -p $(BIN_PATH)
	cp tcpclient $(BIN_PATH)/
	mkdir -p $(LIB_PATH)
	arm-linux-strip libtcpclient.so
	cp libtcpclient.so ../build-arm/mux-arm/lib/
	mv libtcpclient.so $(LIB_PATH)/
	mkdir -p $(LIB_PATH)/include
	cp -a *.h $(LIB_PATH)/include
	sudo cp -a $(BUILD_PATH) /home/nfs/source
	sudo chown -R root:root /home/nfs/source/build/


clean:
	rm -f *.o tcpclient
	rm -rf $(BUILD_PATH)
	
	sudo rm -rf /home/nfs/source/$(BUILD_PATH)


distclean:
	rm -f *.o tcpclient
	rm -rf $(BUILD_PATH)
	sudo rm -rf /home/nfs/source/$(BUILD_PATH)

